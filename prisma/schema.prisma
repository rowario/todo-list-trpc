// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["extendedWhereUnique"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    days          Day[]     @relation("days")
    todos         Todo[]
    accounts      Account[]
    sessions      Session[]
    currentDay    Day?      @relation("current")
}

model Day {
    id             String  @id @default(cuid())
    date           String
    user           User    @relation("days", fields: [userId], references: [id])
    userId         String
    todos          Todo[]
    currentDayUser User?   @relation("current", fields: [currentUserId], references: [id])
    currentUserId  String? @unique

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Todo {
    id        String  @id @default(cuid())
    title     String
    completed Boolean
    user      User    @relation(fields: [userId], references: [id])
    userId    String
    day       Day     @relation(fields: [dayId], references: [id])
    dayId     String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
